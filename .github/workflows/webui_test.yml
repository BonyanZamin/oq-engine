---
name: Test WebUI on RH based OS
on:
  workflow_dispatch:
    inputs:
      lts-ver:
        description: Engine Release (0 for nightly)
        default: 0
        required: true
      git-ref:
        description: Git Ref Branch
        default: master
        required: true
  schedule:
    - cron: "0 22 * * *"

jobs:
  test_ui:
    name: Test on RH based (fedora container)
    runs-on: ubuntu-latest
    env:
      GITHUB_DEF_BR:  ${{ github.event.repository.default_branch }}
    strategy:
      matrix:
        python-version: [python3.11]
    container:
      image: fedora:39
      options: --privileged
    steps:
      - name: Test WebUI and run https calculation
        run: |
          set -x
          dnf update -y
          #install python3 required from RPM of engine
          dnf install python3.11 -y
          sleep 5
          #
          pwd
          ls -lrt
          python3.11 install.py devel_server
          mkdir /var/log/oq-engine/
          chown -R openquake /var/log/oq-engine/
          runuser -l openquake -c '/opt/openquake/venv/bin/oq dbserver start &'
          # Wait the DbServer to come up
          echo "Waiting DBServer up on port 1907...."
          while ! nc -z localhost 1907; do
            sleep 2 # wait for 1/10 of the second before check again
          done
          sleep 3
          oq --version
          #
          ls -lrt /opt/openquake/venv/lib/python3.11/site-packages
          echo "Add settings for login and logging on webui before to start"
          cd /opt/openquake/venv/lib/python3.11/site-packages/openquake/server/
          ls -lrt
          cat > local_settings.py << EOF
          LOCKDOWN = True
          #
          WEBUI_ACCESS_LOG_DIR = '/var/log/oq-engine'
          EOF
          echo "DISPLAY content of local_settings"
          cat local_settings.py
          # START WEBUI
          runuser -l openquake -c '/opt/openquake/venv/bin/oq webui start 127.0.0.1:8800 -s &'
          echo "Waiting WEBUI up on port 8800...."
          while ! nc -z localhost 8800; do
            sleep 5 # wait for 1/10 of the second before check again
          done
          echo "Test WebUI with curl before to test django"
          sleep 1
          # Perform migration after setup local_settings
          cd /opt/openquake/venv/lib/python3.11/site-packages/openquake/engine/
          runuser -l openquake -c '/opt/openquake/venv/bin/oq webui migrate'
          sleep 1
          curl -L -I -X GET http://127.0.0.1:8800/accounts/login/
          echo -n "TEST DJANGO LOGIN "
          LOGIN_URL=http://127.0.0.1:8800/accounts/login/
          YOUR_USER='username'
          YOUR_PASS='password'
          COOKIES=cookies.txt
          CURL_BIN="curl -s -c $COOKIES -b $COOKIES -e $LOGIN_URL"
          echo -n "Django Auth: get csrftoken ..."
          $CURL_BIN $LOGIN_URL > /dev/null
          DJANGO_TOKEN="csrfmiddlewaretoken=$(grep csrftoken $COOKIES | sed 's/^.*csrftoken\s*//')"
          echo " perform login ..."
          $CURL_BIN \
              -d "$DJANGO_TOKEN&username=$YOUR_USER&password=$YOUR_PASS" \
              -X POST $LOGIN_URL > /dev/null
          echo "--------------------"
          echo "display log of webui"
          echo "--------------------"
          cat /var/log/oq-engine/webui-access.log
          if [ -s /var/log/oq-engine/webui-access.log ]; then
          # The file is not-empty.
          cat /var/log/oq-engine/webui-access.log
          else
          ## The file is empty.
          echo "Something not work as expected"
          exit 1
          fi
          # Run a calcs using https
          #
          oq engine --run https://downloads.openquake.org/jobs/risk_test.zip

