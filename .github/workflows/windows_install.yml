---
name: Installation Script for Windows

on:
  push:
    branches: [ windows ]
  schedule:
    - cron: "30 22 * * *"

jobs:
  install:
    runs-on: windows-latest
    env:
      GITHUB_PULL_REQUEST: ${{ github.event.number }}
      GITHUB_DEF_BR:  ${{ github.event.repository.default_branch }}
      GITHUB_REF:  ${{ github.ref }}
      GITHUB_HD_REF:  ${{ github.head_ref }}
      GITHUB_BS_REF:  ${{ github.base_ref }}
        #more $GITHUB_EVENT_PATH
    strategy:
      matrix:
        python-version: [3.6, 3.8]

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          ref: windows
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
    # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
        #Disable to see if still fails
        #  - name: Install virtualenv on user space
        #run: |
        #  python -m pip install --user virtualenv
      - name: Check version of executable
        run: |
          where.exe virtualenv.exe
          where.exe python
          where.exe py
    # Use script to install engine and not the pip install .
      - name: Install engine with install script
        run: |
          python install_win.py devel
      - name: Run demos to test installation
        run: |
          #$HOMEDRIVE = "C:\"
          #$HOMEPATH = "Users\" + $env:username
          # Set and force overwrite of the $HOME variable
          #Set-Variable HOME "$HOMEDRIVE$HOMEPATH" -Force
          C:\Users\runneradmin\openquake\Scripts\activate.ps1
          oq --version
          oq engine --run "https://downloads.openquake.org/pkgs/test_event_based_risk_inputs_bc.zip"
