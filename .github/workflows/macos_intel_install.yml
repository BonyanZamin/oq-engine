name: MacOS Intel install and test
'on':
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref
        default: master
        required: true
  schedule:
    - cron: "0 1 * * *"
  push:
    branches: [macos_test]

jobs:

  Install_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13]
        python-version: [3.9, "3.10"]
    steps:
    # This Checkout use git-ref keyword from dispatch
      - name: Clone Repository (Master)
        uses: actions/checkout@v2
        if: github.event.inputs.git-ref == ''
      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v2
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}
      - name: Set up Python3
        uses: actions/setup-python@v2
        with:
          python-version:  ${{ matrix.python-version }}
      - name: Run Installation of oq-engine in devel mode
        env: 
          BRANCH: ${{ github.event.inputs.git-ref }}
        run: |
          export PIP_DEFAULT_TIMEOUT=100
          pip3 install -U pip wheel setuptools
          #
          echo "branch to test: ${BRANCH}"
          if [[ "$BRANCH" != "" ]] 
          then
            python install.py devel --version ${BRANCH}
          else
            python install.py devel 
          fi
      - name: Run demos to test installation
        run: |
          set -x
          source ~/openquake/bin/activate
          oq dbserver start
          sleep 10
          oq info venv
          oq info cfg
          cd ~/work/oq-engine/oq-engine/demos
          ls -lrt
          # run demos with job_hazard.ini and job_risk.ini
          for demo_dir in $(find . -type d | sort); do
             if [ -f $demo_dir/job_hazard.ini ]; then
                 oq engine --run $demo_dir/job_hazard.ini --exports npz -p pointsource_distance=0
                 oq engine --run $demo_dir/job_risk.ini --hc -1
             fi
          done
          # run the other demos
          for ini in $(find . -name job.ini | sort); do
              oq engine --run $ini --exports xml,hdf5 -p pointsource_distance=0 -r
          done
      - name: Run pytest to test installation
        run: |
          source ~/openquake/bin/activate
          pip3 install pytest
          oq --version
          oq dbserver start
          pytest -vs  --color=yes /Users/runner/work/oq-engine/oq-engine/openquake/
          sleep 2
